{"ast":null,"code":"import axios from \"axios\";\nimport { API_URL, api } from \"../../config/api\";\nimport { ADD_TO_FAVORITE_FAILURE, ADD_TO_FAVORITE_REQUEST, ADD_TO_FAVORITE_SUCCESS, GET_USER_FAILURE, GET_USER_REQUEST, GET_USER_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT, REGISTER_FAILURE, REGISTER_REQUEST, REGISTER_SUCCESS } from \"./ActionType\";\nexport const registerUser = reqData => async dispatch => {\n  dispatch({\n    type: REGISTER_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.post(`${API_URL}/auth/signup`, reqData.userData);\n    if (data.jwt) localStorage.setItem(\"jwt\", data.jwt);\n    if (data.role === \"ROLE_RESTAURANT_OWNER\") {\n      reqData.navigate(\"/account/login\");\n    } else {\n      reqData.navigate(\"/\");\n    }\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: data.jwt\n    });\n    console.log(\"register success\", data);\n  } catch (error) {\n    dispatch({\n      type: REGISTER_FAILURE,\n      payload: error\n    });\n    console.log(\"error\", error);\n  }\n};\nexport const loginUser = reqData => async dispatch => {\n  dispatch({\n    type: LOGIN_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.post(`${API_URL}/auth/signin`, reqData.userData);\n    if (data.jwt) localStorage.setItem(\"jwt\", data.jwt);\n    if (data.role === \"ROLE_RESTAURANT_OWNER\") {\n      reqData.navigate(\"/admin/restaurants\");\n    } else {\n      reqData.navigate(\"/\");\n    }\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.jwt\n    });\n    console.log(\"login success\", data);\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: error\n    });\n    console.log(\"error\", error);\n  }\n};\nexport const getUser = jwt => async dispatch => {\n  dispatch({\n    type: GET_USER_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await api.get(`/api/users/profile`, {\n      headers: {\n        Authorization: `Bearer ${jwt}`\n      }\n    });\n    dispatch({\n      type: GET_USER_SUCCESS,\n      payload: data\n    });\n    console.log(\"user profile\", data);\n  } catch (error) {\n    dispatch({\n      type: GET_USER_FAILURE,\n      payload: error\n    });\n    console.log(\"error\", error);\n  }\n};\nexport const addToFavorite = ({\n  jwt,\n  restaurantId\n}) => async dispatch => {\n  dispatch({\n    type: ADD_TO_FAVORITE_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await api.put(`/api/restaurants/${restaurantId}/add-favorites`, {}, {\n      headers: {\n        Authorization: `Bearer ${jwt}`\n      }\n    });\n    dispatch({\n      type: ADD_TO_FAVORITE_SUCCESS,\n      payload: data\n    });\n    console.log(\"added to favorite\", data);\n  } catch (error) {\n    dispatch({\n      type: ADD_TO_FAVORITE_FAILURE,\n      payload: error\n    });\n    console.log(\"error\", error);\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    localStorage.clear();\n    dispatch({\n      type: LOGOUT\n    });\n    console.log(\"logout success\");\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","ADD_TO_FAVORITE_FAILURE","ADD_TO_FAVORITE_REQUEST","ADD_TO_FAVORITE_SUCCESS","GET_USER_FAILURE","GET_USER_REQUEST","GET_USER_SUCCESS","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT","REGISTER_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","registerUser","reqData","dispatch","type","data","post","userData","jwt","localStorage","setItem","role","navigate","payload","console","log","error","loginUser","getUser","get","headers","Authorization","addToFavorite","restaurantId","put","logout","clear"],"sources":["C:/Users/DUONG/Downloads/Project-react-main/Project-react-main/src/componet/State/Authentication/Action.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\nimport { API_URL, api } from \"../../config/api\"\r\nimport { ADD_TO_FAVORITE_FAILURE, ADD_TO_FAVORITE_REQUEST, ADD_TO_FAVORITE_SUCCESS, GET_USER_FAILURE, GET_USER_REQUEST, GET_USER_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT, REGISTER_FAILURE, REGISTER_REQUEST, REGISTER_SUCCESS } from \"./ActionType\"\r\n\r\n\r\n\r\nexport const registerUser = (reqData) => async (dispatch) => {\r\n    dispatch({ type: REGISTER_REQUEST })\r\n    try {\r\n        const { data } = await axios.post(`${API_URL}/auth/signup`, reqData.userData)\r\n        if (data.jwt) localStorage.setItem(\"jwt\", data.jwt);\r\n        if (data.role === \"ROLE_RESTAURANT_OWNER\") {\r\n            reqData.navigate(\"/account/login\")\r\n        } else {\r\n            reqData.navigate(\"/\")\r\n        }\r\n        dispatch({ type: REGISTER_SUCCESS, payload: data.jwt })\r\n        console.log(\"register success\", data)\r\n\r\n    } catch (error) {\r\n        dispatch({ type: REGISTER_FAILURE, payload: error })\r\n        console.log(\"error\", error)\r\n    }\r\n}\r\n\r\nexport const loginUser=(reqData)=>async(dispatch)=>{\r\n    dispatch({type:LOGIN_REQUEST})\r\n    try {\r\n        const {data} = await axios.post(`${API_URL}/auth/signin`,reqData.userData)\r\n        if(data.jwt)localStorage.setItem(\"jwt\", data.jwt);\r\n        if(data.role===\"ROLE_RESTAURANT_OWNER\"){\r\n            reqData.navigate(\"/admin/restaurants\")\r\n        }\r\n        else{\r\n            reqData.navigate(\"/\")\r\n        }\r\n        dispatch({type: LOGIN_SUCCESS, payload:data.jwt})\r\n        console.log(\"login success\",data)\r\n\r\n    } catch (error) {\r\n        dispatch({type:LOGIN_FAILURE,payload:error})\r\n        console.log(\"error\", error)\r\n    }\r\n}\r\n\r\nexport const getUser=(jwt)=>async(dispatch)=>{\r\n    dispatch({type:GET_USER_REQUEST})\r\n    try {\r\n        const {data} = await api.get(`/api/users/profile`,{\r\n            headers:{\r\n                Authorization:`Bearer ${jwt}`\r\n            }\r\n        })\r\n       \r\n        dispatch({type: GET_USER_SUCCESS, payload:data})\r\n        console.log(\"user profile\",data)\r\n    } catch (error) {\r\n        dispatch({type:GET_USER_FAILURE,payload:error})\r\n        console.log(\"error\", error)\r\n    }\r\n}\r\n\r\nexport const addToFavorite=({jwt,restaurantId})=>async(dispatch)=>{\r\n    dispatch({type:ADD_TO_FAVORITE_REQUEST})\r\n    try {\r\n        const {data} = await api.put(`/api/restaurants/${restaurantId}/add-favorites`,{},{\r\n            headers:{\r\n                Authorization:`Bearer ${jwt}`\r\n            }\r\n        })\r\n       \r\n        dispatch({type: ADD_TO_FAVORITE_SUCCESS, payload:data})\r\n        console.log(\"added to favorite\",data)\r\n    } catch (error) {\r\n        dispatch({type:ADD_TO_FAVORITE_FAILURE,payload:error})\r\n        console.log(\"error\", error)\r\n    }\r\n}\r\n\r\n\r\nexport const logout=()=>async(dispatch)=>{\r\n    \r\n    try {\r\n        \r\n        localStorage.clear();\r\n        dispatch({type: LOGOUT})\r\n        console.log(\"logout success\")\r\n    } catch (error) {\r\n        console.log(\"error\", error)\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}