{"ast":null,"code":"import axios from \"axios\";\nimport { API_URL, api } from '../../config/api';\nimport { CREATE_INGREDIENT_CATEGORY_SUCCESS, CREATE_INGREDIENT_SUCCESS, GET_INGREDIENTS, GET_INGREDIENT_CATEGORY_SUCCESS, UPDATE_STOCK } from \"./ActionType\";\nexport const getIngredientsOfRestaurant = ({\n  id,\n  jwt\n}) => {\n  return async dispatch => {\n    try {\n      const response = await api.get(`/api/admin/ingredients/restaurant/${id}`, {\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      console.log(\"get all ingredients\", response.data);\n      dispatch({\n        type: GET_INGREDIENTS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n};\nexport const createIngredient = ({\n  data,\n  jwt\n}) => {\n  return async dispatch => {\n    try {\n      const response = await api.post(`/api/admin/ingredients`, data, {\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      console.log(\"create ingredients\", response.data);\n      dispatch({\n        type: CREATE_INGREDIENT_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n};\nexport const createIngredientCategory = ({\n  data,\n  jwt\n}) => {\n  console.log(\"data\", data, \"jwt\", jwt);\n  return async dispatch => {\n    try {\n      const response = await api.post(`/api/admin/ingredients/category`, data, {\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      console.log(\"create ingredients category\", response.data);\n      dispatch({\n        type: CREATE_INGREDIENT_CATEGORY_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n};\nexport const getIngredientCategory = ({\n  id,\n  jwt\n}) => {\n  return async dispatch => {\n    try {\n      const response = await api.get(`/api/admin/ingredients/restaurant/${id}/category`, {\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      console.log(\"get ingredients category\", response.data);\n      dispatch({\n        type: GET_INGREDIENT_CATEGORY_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n};\nexport const updateStockOfIngredient = ({\n  id,\n  jwt\n}) => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await api.put(`/api/admin/ingredients/${id}/stoke`, {}, {\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      dispatch({\n        type: UPDATE_STOCK,\n        payload: data\n      });\n      console.log(\"update ingredients stock\", data);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n};","map":{"version":3,"names":["axios","API_URL","api","CREATE_INGREDIENT_CATEGORY_SUCCESS","CREATE_INGREDIENT_SUCCESS","GET_INGREDIENTS","GET_INGREDIENT_CATEGORY_SUCCESS","UPDATE_STOCK","getIngredientsOfRestaurant","id","jwt","dispatch","response","get","headers","Authorization","console","log","data","type","payload","error","createIngredient","post","createIngredientCategory","getIngredientCategory","updateStockOfIngredient","put"],"sources":["C:/Users/DUONG/Downloads/Project-react-main/Project-react-main/src/componet/State/Ingredients/Action.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_URL, api} from '../../config/api';\r\nimport { CREATE_INGREDIENT_CATEGORY_SUCCESS, CREATE_INGREDIENT_SUCCESS, GET_INGREDIENTS, GET_INGREDIENT_CATEGORY_SUCCESS, UPDATE_STOCK } from \"./ActionType\";\r\n\r\nexport const getIngredientsOfRestaurant = ({id, jwt}) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await api.get(\r\n                `/api/admin/ingredients/restaurant/${id}`,\r\n                {\r\n                    headers:{\r\n                        Authorization: `Bearer ${jwt}`,\r\n                    },\r\n                }\r\n            );\r\n            console.log(\"get all ingredients\", response.data);\r\n            dispatch({\r\n                type:GET_INGREDIENTS,\r\n                payload:response.data,\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const createIngredient = ({data, jwt}) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await api.post(`/api/admin/ingredients`, data, {\r\n                headers: {\r\n                    Authorization: `Bearer ${jwt}`,\r\n                },\r\n            });\r\n            console.log(\"create ingredients\", response.data);\r\n            dispatch({type:CREATE_INGREDIENT_SUCCESS, payload: response.data,});\r\n\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const createIngredientCategory = ({data,jwt}) => {\r\n    console.log(\"data\", data, \"jwt\", jwt);\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await api.post(`/api/admin/ingredients/category`, data,{\r\n                headers: {\r\n                    Authorization: `Bearer ${jwt}`,\r\n                },\r\n            });\r\n            console.log(\"create ingredients category\", response.data);\r\n            dispatch({\r\n                type:CREATE_INGREDIENT_CATEGORY_SUCCESS,\r\n                payload: response.data,\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const getIngredientCategory = ({id, jwt}) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await api.get(\r\n                `/api/admin/ingredients/restaurant/${id}/category`,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${jwt}`,\r\n                    },\r\n                }\r\n            );\r\n            console.log(\"get ingredients category\", response.data);\r\n            dispatch({\r\n                type: GET_INGREDIENT_CATEGORY_SUCCESS,\r\n                payload:response.data,\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const updateStockOfIngredient = ({id, jwt}) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const {data} = await api.put(\r\n                `/api/admin/ingredients/${id}/stoke`,\r\n                {},\r\n                {\r\n                    headers:{\r\n                        Authorization: `Bearer ${jwt}`,\r\n                    },\r\n                }\r\n            );\r\n            dispatch({\r\n                type: UPDATE_STOCK,\r\n                payload: data,\r\n            });\r\n            console.log(\"update ingredients stock\", data);\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}