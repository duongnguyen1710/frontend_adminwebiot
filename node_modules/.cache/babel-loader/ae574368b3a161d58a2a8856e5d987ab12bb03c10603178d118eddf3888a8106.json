{"ast":null,"code":"import { api } from \"../../config/api\";\nimport { CREATE_ORDER_FAILURE, CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, GET_USERS_ORDERS_FAILURE, GET_USERS_ORDERS_REQUEST, GET_USERS_ORDERS_SUCCESS } from \"./ActionTypes\";\nexport const createOrder = reqData => {\n  return async dispatch => {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    try {\n      const {\n        data\n      } = await api.post(`/api/order`, reqData.order, {\n        headers: {\n          Authorization: `Bearer ${reqData.jwt}`\n        }\n      });\n      // Kiểm tra phản hồi từ backend và chuyển hướng người dùng đến URL thanh toán tương ứng\n      if (data.vnpay_url) {\n        window.location.href = data.vnpay_url;\n      } else if (data.payment_url) {\n        window.location.href = data.payment_url;\n      } else if (data.paypal_url) {\n        window.location.href = data.paypal_url;\n      } else {\n        console.log(\"No payment URL returned from backend\", data);\n      }\n      console.log(\"created order data\", data);\n      dispatch({\n        type: CREATE_ORDER_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n      dispatch({\n        type: CREATE_ORDER_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const getUsersOrders = jwt => {\n  return async dispatch => {\n    dispatch({\n      type: GET_USERS_ORDERS_REQUEST\n    });\n    try {\n      const {\n        data\n      } = await api.get(`/api/order/user`, {\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      console.log(\"users order\", data);\n      dispatch({\n        type: GET_USERS_ORDERS_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_USERS_ORDERS_FAILURE,\n        payload: error\n      });\n    }\n  };\n};","map":{"version":3,"names":["api","CREATE_ORDER_FAILURE","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","GET_USERS_ORDERS_FAILURE","GET_USERS_ORDERS_REQUEST","GET_USERS_ORDERS_SUCCESS","createOrder","reqData","dispatch","type","data","post","order","headers","Authorization","jwt","vnpay_url","window","location","href","payment_url","paypal_url","console","log","payload","error","getUsersOrders","get"],"sources":["C:/Users/DUONG/Downloads/Project-react-main/Project-react-main/src/componet/State/Order/Action.js"],"sourcesContent":["import { api } from \"../../config/api\";\r\nimport { CREATE_ORDER_FAILURE, CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, GET_USERS_ORDERS_FAILURE, GET_USERS_ORDERS_REQUEST, GET_USERS_ORDERS_SUCCESS } from \"./ActionTypes\";\r\n\r\nexport const createOrder = (reqData) => {\r\n    return async (dispatch) => {\r\n        dispatch({type: CREATE_ORDER_REQUEST});\r\n        try {\r\n            const {data} = await api.post(`/api/order`, reqData.order,{\r\n                headers:{\r\n                    Authorization: `Bearer ${reqData.jwt}`,\r\n                },\r\n            });\r\n            // Kiểm tra phản hồi từ backend và chuyển hướng người dùng đến URL thanh toán tương ứng\r\n            if (data.vnpay_url) {\r\n                window.location.href = data.vnpay_url;\r\n            } else if (data.payment_url) {\r\n                window.location.href = data.payment_url;\r\n            } else if (data.paypal_url) {\r\n                window.location.href = data.paypal_url;\r\n            } else {\r\n                console.log(\"No payment URL returned from backend\", data);\r\n            }\r\n            console.log(\"created order data\", data);\r\n            dispatch({type:CREATE_ORDER_SUCCESS, payload:data});\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n            dispatch({type:CREATE_ORDER_FAILURE, payload:error});\r\n        }\r\n    };\r\n};\r\n\r\nexport const getUsersOrders = (jwt) => {\r\n    return async (dispatch) => {\r\n        dispatch({type: GET_USERS_ORDERS_REQUEST});\r\n        try {\r\n            const {data} = await api.get(`/api/order/user`, {\r\n                headers:{\r\n                    Authorization: `Bearer ${jwt}`,\r\n                },\r\n            });\r\n            console.log(\"users order\", data);\r\n            dispatch({type: GET_USERS_ORDERS_SUCCESS, payload:data});\r\n        } catch (error) {\r\n            dispatch({type: GET_USERS_ORDERS_FAILURE, payload:error});\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,oBAAoB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,wBAAwB,EAAEC,wBAAwB,EAAEC,wBAAwB,QAAQ,eAAe;AAE9K,OAAO,MAAMC,WAAW,GAAIC,OAAO,IAAK;EACpC,OAAO,MAAOC,QAAQ,IAAK;IACvBA,QAAQ,CAAC;MAACC,IAAI,EAAER;IAAoB,CAAC,CAAC;IACtC,IAAI;MACA,MAAM;QAACS;MAAI,CAAC,GAAG,MAAMX,GAAG,CAACY,IAAI,CAAC,YAAY,EAAEJ,OAAO,CAACK,KAAK,EAAC;QACtDC,OAAO,EAAC;UACJC,aAAa,EAAE,UAAUP,OAAO,CAACQ,GAAG;QACxC;MACJ,CAAC,CAAC;MACF;MACA,IAAIL,IAAI,CAACM,SAAS,EAAE;QAChBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGT,IAAI,CAACM,SAAS;MACzC,CAAC,MAAM,IAAIN,IAAI,CAACU,WAAW,EAAE;QACzBH,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGT,IAAI,CAACU,WAAW;MAC3C,CAAC,MAAM,IAAIV,IAAI,CAACW,UAAU,EAAE;QACxBJ,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGT,IAAI,CAACW,UAAU;MAC1C,CAAC,MAAM;QACHC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEb,IAAI,CAAC;MAC7D;MACAY,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEb,IAAI,CAAC;MACvCF,QAAQ,CAAC;QAACC,IAAI,EAACP,oBAAoB;QAAEsB,OAAO,EAACd;MAAI,CAAC,CAAC;IACvD,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC;MAC3BjB,QAAQ,CAAC;QAACC,IAAI,EAACT,oBAAoB;QAAEwB,OAAO,EAACC;MAAK,CAAC,CAAC;IACxD;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIX,GAAG,IAAK;EACnC,OAAO,MAAOP,QAAQ,IAAK;IACvBA,QAAQ,CAAC;MAACC,IAAI,EAAEL;IAAwB,CAAC,CAAC;IAC1C,IAAI;MACA,MAAM;QAACM;MAAI,CAAC,GAAG,MAAMX,GAAG,CAAC4B,GAAG,CAAC,iBAAiB,EAAE;QAC5Cd,OAAO,EAAC;UACJC,aAAa,EAAE,UAAUC,GAAG;QAChC;MACJ,CAAC,CAAC;MACFO,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEb,IAAI,CAAC;MAChCF,QAAQ,CAAC;QAACC,IAAI,EAAEJ,wBAAwB;QAAEmB,OAAO,EAACd;MAAI,CAAC,CAAC;IAC5D,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZjB,QAAQ,CAAC;QAACC,IAAI,EAAEN,wBAAwB;QAAEqB,OAAO,EAACC;MAAK,CAAC,CAAC;IAC7D;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}