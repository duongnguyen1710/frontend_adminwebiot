{"ast":null,"code":"import { isPresentInFavorites } from \"../../config/logic\";\nimport { ADD_TO_FAVORITE_FAILURE, ADD_TO_FAVORITE_REQUEST, ADD_TO_FAVORITE_SUCCESS, GET_USER_FAILURE, GET_USER_REQUEST, GET_USER_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT, REGISTER_FAILURE, REGISTER_REQUEST, REGISTER_SUCCESS } from \"./ActionType\";\nconst initialState = {\n  user: null,\n  isLoading: false,\n  error: null,\n  jwt: null,\n  favorites: [],\n  success: null\n};\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n    case LOGIN_REQUEST:\n    case GET_USER_REQUEST:\n    case ADD_TO_FAVORITE_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n        success: null\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        jwt: action.payload,\n        success: \"Register Success\"\n      };\n    case GET_USER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        user: action.payload,\n        favorites: action.payload.favories\n      };\n    case ADD_TO_FAVORITE_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        error: null,\n        favorites: isPresentInFavorites(state.favorites, action.payload) ? state.favorites.filter(item => item.id !== action.payload.id) : [action.payload, ...state.favorites]\n      };\n    case LOGOUT:\n      return initialState;\n    case REGISTER_FAILURE:\n    case LOGIN_FAILURE:\n    case GET_USER_FAILURE:\n    case ADD_TO_FAVORITE_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n        success: null\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["isPresentInFavorites","ADD_TO_FAVORITE_FAILURE","ADD_TO_FAVORITE_REQUEST","ADD_TO_FAVORITE_SUCCESS","GET_USER_FAILURE","GET_USER_REQUEST","GET_USER_SUCCESS","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT","REGISTER_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","initialState","user","isLoading","error","jwt","favorites","success","authReducer","state","action","type","payload","favories","filter","item","id"],"sources":["C:/Users/DUONG/Downloads/Project-react-main/Project-react-main/src/componet/State/Authentication/Reducer.js"],"sourcesContent":["import { isPresentInFavorites } from \"../../config/logic\";\r\nimport { ADD_TO_FAVORITE_FAILURE, ADD_TO_FAVORITE_REQUEST, ADD_TO_FAVORITE_SUCCESS, GET_USER_FAILURE, GET_USER_REQUEST, GET_USER_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT, REGISTER_FAILURE, REGISTER_REQUEST, REGISTER_SUCCESS } from \"./ActionType\";\r\n\r\nconst initialState = {\r\n    user: null,\r\n    isLoading: false,\r\n    error: null,\r\n    jwt: null,\r\n    favorites: [],\r\n    success: null\r\n}\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REGISTER_REQUEST:\r\n        case LOGIN_REQUEST:\r\n        case GET_USER_REQUEST:\r\n        case ADD_TO_FAVORITE_REQUEST:\r\n            return { ...state, isLoading: true, error: null, success: null, };\r\n\r\n\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                jwt: action.payload,\r\n                success: \"Register Success\",\r\n            };\r\n\r\n            case GET_USER_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    isLoading: false,\r\n                    user: action.payload,\r\n                    favorites: action.payload.favories,\r\n                };\r\n                case ADD_TO_FAVORITE_SUCCESS:\r\n                    return {\r\n                        ...state,\r\n                        isLoading: false,\r\n                        error: null,\r\n                        favorites: isPresentInFavorites(state.favorites, action.payload)? state.favorites.filter((item) => item.id !== action.payload.id): [action.payload, ...state.favorites],\r\n                    };\r\n        case LOGOUT:\r\n            return initialState;\r\n        case REGISTER_FAILURE:\r\n        case LOGIN_FAILURE:\r\n        case GET_USER_FAILURE:\r\n        case ADD_TO_FAVORITE_FAILURE:\r\n            return {\r\n                 ...state, \r\n                 isLoading: false, \r\n                 error: action.payload, \r\n                 success: null,\r\n                 };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,oBAAoB;AACzD,SAASC,uBAAuB,EAAEC,uBAAuB,EAAEC,uBAAuB,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,aAAa,EAAEC,aAAa,EAAEC,aAAa,EAAEC,MAAM,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,gBAAgB,QAAQ,cAAc;AAEzQ,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,IAAI;EACVC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,GAAG,EAAE,IAAI;EACTC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE;AACb,CAAC;AACD,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGR,YAAY,EAAES,MAAM,KAAK;EACzD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKZ,gBAAgB;IACrB,KAAKJ,aAAa;IAClB,KAAKH,gBAAgB;IACrB,KAAKH,uBAAuB;MACxB,OAAO;QAAE,GAAGoB,KAAK;QAAEN,SAAS,EAAE,IAAI;QAAEC,KAAK,EAAE,IAAI;QAAEG,OAAO,EAAE;MAAM,CAAC;IAGrE,KAAKP,gBAAgB;IACrB,KAAKJ,aAAa;MACd,OAAO;QACH,GAAGa,KAAK;QACRN,SAAS,EAAE,KAAK;QAChBE,GAAG,EAAEK,MAAM,CAACE,OAAO;QACnBL,OAAO,EAAE;MACb,CAAC;IAED,KAAKd,gBAAgB;MACjB,OAAO;QACH,GAAGgB,KAAK;QACRN,SAAS,EAAE,KAAK;QAChBD,IAAI,EAAEQ,MAAM,CAACE,OAAO;QACpBN,SAAS,EAAEI,MAAM,CAACE,OAAO,CAACC;MAC9B,CAAC;IACD,KAAKvB,uBAAuB;MACxB,OAAO;QACH,GAAGmB,KAAK;QACRN,SAAS,EAAE,KAAK;QAChBC,KAAK,EAAE,IAAI;QACXE,SAAS,EAAEnB,oBAAoB,CAACsB,KAAK,CAACH,SAAS,EAAEI,MAAM,CAACE,OAAO,CAAC,GAAEH,KAAK,CAACH,SAAS,CAACQ,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,CAAC,GAAE,CAACN,MAAM,CAACE,OAAO,EAAE,GAAGH,KAAK,CAACH,SAAS;MAC1K,CAAC;IACb,KAAKT,MAAM;MACP,OAAOI,YAAY;IACvB,KAAKH,gBAAgB;IACrB,KAAKJ,aAAa;IAClB,KAAKH,gBAAgB;IACrB,KAAKH,uBAAuB;MACxB,OAAO;QACF,GAAGqB,KAAK;QACRN,SAAS,EAAE,KAAK;QAChBC,KAAK,EAAEM,MAAM,CAACE,OAAO;QACrBL,OAAO,EAAE;MACT,CAAC;IAEV;MACI,OAAOE,KAAK;EACpB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}