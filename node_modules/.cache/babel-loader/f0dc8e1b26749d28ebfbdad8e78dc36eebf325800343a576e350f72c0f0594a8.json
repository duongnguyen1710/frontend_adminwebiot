{"ast":null,"code":"import axios from \"axios\";\nimport { api } from \"../../config/api\";\nimport { GET_RESTAURANTS_ORDER_FAILURE, GET_RESTAURANTS_ORDER_REQUEST, GET_RESTAURANTS_ORDER_SUCCESS, UPDATE_ORDER_STATUS_FAILURE, UPDATE_ORDER_STATUS_REQUEST, UPDATE_ORDER_STATUS_SUCCESS } from \"./ActionType.js\";\nexport const updateOrderStatus = ({\n  orderId,\n  orderStatus,\n  jwt\n}) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: UPDATE_ORDER_STATUS_REQUEST\n      });\n      const response = await api.put(`/api/admin/order/${orderId}/${orderStatus}`, {}, {\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      const updateOrder = response.data;\n      console.log(\"updated order\", updateOrder);\n      dispatch({\n        type: UPDATE_ORDER_STATUS_SUCCESS,\n        payload: updateOrder\n      });\n    } catch (error) {\n      console.log(\"catch error\", error);\n      dispatch({\n        type: UPDATE_ORDER_STATUS_FAILURE,\n        error\n      });\n    }\n  };\n};\nexport const fetchRestaurantsOrder = ({\n  restaurantId,\n  orderStatus,\n  jwt\n}) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: GET_RESTAURANTS_ORDER_REQUEST\n      });\n      const {\n        data\n      } = await api.get(`/api/admin/order/restaurant/${restaurantId}`, {\n        params: {\n          order_status: orderStatus\n        },\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      const orders = data;\n      console.log(\"restaurants order ---\", orders);\n      dispatch({\n        type: GET_RESTAURANTS_ORDER_SUCCESS,\n        payload: orders\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_RESTAURANTS_ORDER_FAILURE,\n        error\n      });\n    }\n  };\n};","map":{"version":3,"names":["axios","api","GET_RESTAURANTS_ORDER_FAILURE","GET_RESTAURANTS_ORDER_REQUEST","GET_RESTAURANTS_ORDER_SUCCESS","UPDATE_ORDER_STATUS_FAILURE","UPDATE_ORDER_STATUS_REQUEST","UPDATE_ORDER_STATUS_SUCCESS","updateOrderStatus","orderId","orderStatus","jwt","dispatch","type","response","put","headers","Authorization","updateOrder","data","console","log","payload","error","fetchRestaurantsOrder","restaurantId","get","params","order_status","orders"],"sources":["C:/Users/DUONG/Desktop/Study/React/frontend_webiot/frontend_iot/src/componet/State/Restaurant Order/Action.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { api } from \"../../config/api\";\r\nimport { GET_RESTAURANTS_ORDER_FAILURE, GET_RESTAURANTS_ORDER_REQUEST, GET_RESTAURANTS_ORDER_SUCCESS, UPDATE_ORDER_STATUS_FAILURE, UPDATE_ORDER_STATUS_REQUEST, UPDATE_ORDER_STATUS_SUCCESS } from \"./ActionType.js\";\r\n\r\nexport const updateOrderStatus = ({orderId, orderStatus, jwt}) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({type:UPDATE_ORDER_STATUS_REQUEST});\r\n\r\n            const response = await api.put(\r\n                `/api/admin/order/${orderId}/${orderStatus}`, {}, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${jwt}`,\r\n                      },\r\n                }\r\n\r\n            );\r\n\r\n            const updateOrder = response.data;\r\n            console.log(\"updated order\", updateOrder);\r\n            dispatch({\r\n                type:UPDATE_ORDER_STATUS_SUCCESS,\r\n                payload:updateOrder,\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(\"catch error\", error);\r\n            dispatch({type: UPDATE_ORDER_STATUS_FAILURE, error});\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchRestaurantsOrder = ({restaurantId, orderStatus, jwt}) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({type: GET_RESTAURANTS_ORDER_REQUEST});\r\n            const {data} = await api.get(\r\n                `/api/admin/order/restaurant/${restaurantId}`,{\r\n                    params: {order_status:orderStatus},\r\n                    headers:{\r\n                        Authorization: `Bearer ${jwt}`,\r\n                    },\r\n                }\r\n            );\r\n            const orders = data;\r\n            console.log(\"restaurants order ---\", orders);\r\n            dispatch({\r\n                type:GET_RESTAURANTS_ORDER_SUCCESS,\r\n                payload:orders,\r\n            });\r\n        } catch (error) {\r\n            dispatch({type:GET_RESTAURANTS_ORDER_FAILURE, error});\r\n            \r\n        }\r\n    };\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,kBAAkB;AACtC,SAASC,6BAA6B,EAAEC,6BAA6B,EAAEC,6BAA6B,EAAEC,2BAA2B,EAAEC,2BAA2B,EAAEC,2BAA2B,QAAQ,iBAAiB;AAEpN,OAAO,MAAMC,iBAAiB,GAAGA,CAAC;EAACC,OAAO;EAAEC,WAAW;EAAEC;AAAG,CAAC,KAAK;EAC9D,OAAO,MAAOC,QAAQ,IAAK;IACvB,IAAI;MACAA,QAAQ,CAAC;QAACC,IAAI,EAACP;MAA2B,CAAC,CAAC;MAE5C,MAAMQ,QAAQ,GAAG,MAAMb,GAAG,CAACc,GAAG,CAC1B,oBAAoBN,OAAO,IAAIC,WAAW,EAAE,EAAE,CAAC,CAAC,EAAE;QAC9CM,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUN,GAAG;QAC9B;MACN,CAEJ,CAAC;MAED,MAAMO,WAAW,GAAGJ,QAAQ,CAACK,IAAI;MACjCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,WAAW,CAAC;MACzCN,QAAQ,CAAC;QACLC,IAAI,EAACN,2BAA2B;QAChCe,OAAO,EAACJ;MACZ,CAAC,CAAC;IAEN,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZH,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEE,KAAK,CAAC;MACjCX,QAAQ,CAAC;QAACC,IAAI,EAAER,2BAA2B;QAAEkB;MAAK,CAAC,CAAC;IACxD;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAGA,CAAC;EAACC,YAAY;EAAEf,WAAW;EAAEC;AAAG,CAAC,KAAK;EACvE,OAAO,MAAOC,QAAQ,IAAK;IACvB,IAAI;MACAA,QAAQ,CAAC;QAACC,IAAI,EAAEV;MAA6B,CAAC,CAAC;MAC/C,MAAM;QAACgB;MAAI,CAAC,GAAG,MAAMlB,GAAG,CAACyB,GAAG,CACxB,+BAA+BD,YAAY,EAAE,EAAC;QAC1CE,MAAM,EAAE;UAACC,YAAY,EAAClB;QAAW,CAAC;QAClCM,OAAO,EAAC;UACJC,aAAa,EAAE,UAAUN,GAAG;QAChC;MACJ,CACJ,CAAC;MACD,MAAMkB,MAAM,GAAGV,IAAI;MACnBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEQ,MAAM,CAAC;MAC5CjB,QAAQ,CAAC;QACLC,IAAI,EAACT,6BAA6B;QAClCkB,OAAO,EAACO;MACZ,CAAC,CAAC;IACN,CAAC,CAAC,OAAON,KAAK,EAAE;MACZX,QAAQ,CAAC;QAACC,IAAI,EAACX,6BAA6B;QAAEqB;MAAK,CAAC,CAAC;IAEzD;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}