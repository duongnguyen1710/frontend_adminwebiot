{"ast":null,"code":"import { api } from \"../../config/api\";\nimport { CREATE_ORDER_FAILURE, CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, GET_ORDERS_FAILURE, GET_ORDERS_REQUEST, GET_ORDERS_SUCCESS, GET_USERS_ORDERS_FAILURE, GET_USERS_ORDERS_REQUEST, GET_USERS_ORDERS_SUCCESS } from \"./ActionTypes\";\nexport const createOrder = reqData => {\n  return async dispatch => {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    try {\n      const {\n        data\n      } = await api.post(`/api/order`, reqData.order, {\n        headers: {\n          Authorization: `Bearer ${reqData.jwt}`\n        }\n      });\n      // Kiểm tra phản hồi từ backend và chuyển hướng người dùng đến URL thanh toán tương ứng\n      if (data.vnpay_url) {\n        window.location.href = data.vnpay_url;\n      } else if (data.payment_url) {\n        window.location.href = data.payment_url;\n      } else if (data.paypal_url) {\n        window.location.href = data.paypal_url;\n      } else if (data.zalopay_url) {\n        window.location.href = data.zalopay_url;\n      } else if (data.momo_url) {\n        window.location.href = data.momo_url;\n      } else if (data.onepay_url) {\n        // Thêm điều kiện cho OnePay\n        window.location.href = data.onepay_url;\n      } else {\n        console.log(\"No payment URL returned from backend\", data);\n      }\n      console.log(\"created order data\", data);\n      dispatch({\n        type: CREATE_ORDER_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n      dispatch({\n        type: CREATE_ORDER_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const getUsersOrders = jwt => {\n  return async dispatch => {\n    dispatch({\n      type: GET_USERS_ORDERS_REQUEST\n    });\n    try {\n      const {\n        data\n      } = await api.get(`/api/order/user`, {\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      console.log(\"users order\", data);\n      dispatch({\n        type: GET_USERS_ORDERS_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_USERS_ORDERS_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const getOrders = (jwt, page = 0, size = 10) => {\n  return async dispatch => {\n    dispatch({\n      type: GET_ORDERS_REQUEST\n    });\n    try {\n      const {\n        data\n      } = await api.get('/api/admin/orders', {\n        headers: {\n          Authorization: `Bearer ${jwt}`,\n          'Content-Type': 'application/json'\n        },\n        params: {\n          page,\n          size\n        }\n      });\n      console.log('Orders data:', data);\n      dispatch({\n        type: GET_ORDERS_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ORDERS_FAILURE,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["api","CREATE_ORDER_FAILURE","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","GET_ORDERS_FAILURE","GET_ORDERS_REQUEST","GET_ORDERS_SUCCESS","GET_USERS_ORDERS_FAILURE","GET_USERS_ORDERS_REQUEST","GET_USERS_ORDERS_SUCCESS","createOrder","reqData","dispatch","type","data","post","order","headers","Authorization","jwt","vnpay_url","window","location","href","payment_url","paypal_url","zalopay_url","momo_url","onepay_url","console","log","payload","error","getUsersOrders","get","getOrders","page","size","params","response","message"],"sources":["C:/Users/DUONG/Desktop/Study/React/frontend_webiot/frontend_iot/src/componet/State/Order/Action.js"],"sourcesContent":["import { api } from \"../../config/api\";\r\nimport { CREATE_ORDER_FAILURE, CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, GET_ORDERS_FAILURE, GET_ORDERS_REQUEST, GET_ORDERS_SUCCESS, GET_USERS_ORDERS_FAILURE, GET_USERS_ORDERS_REQUEST, GET_USERS_ORDERS_SUCCESS } from \"./ActionTypes\";\r\n\r\nexport const createOrder = (reqData) => {\r\n    return async (dispatch) => {\r\n        dispatch({type: CREATE_ORDER_REQUEST});\r\n        try {\r\n            const {data} = await api.post(`/api/order`, reqData.order,{\r\n                headers:{\r\n                    Authorization: `Bearer ${reqData.jwt}`,\r\n                },\r\n            });\r\n            // Kiểm tra phản hồi từ backend và chuyển hướng người dùng đến URL thanh toán tương ứng\r\n            if (data.vnpay_url) {\r\n                window.location.href = data.vnpay_url;\r\n            } else if (data.payment_url) {\r\n                window.location.href = data.payment_url;\r\n            } else if (data.paypal_url) {\r\n                window.location.href = data.paypal_url;\r\n            } else if (data.zalopay_url) {\r\n                window.location.href = data.zalopay_url;\r\n            } else if (data.momo_url) {\r\n                window.location.href = data.momo_url;\r\n            } else if (data.onepay_url) {  // Thêm điều kiện cho OnePay\r\n                window.location.href = data.onepay_url;\r\n            } else {\r\n                console.log(\"No payment URL returned from backend\", data);\r\n            }\r\n            console.log(\"created order data\", data);\r\n            dispatch({type:CREATE_ORDER_SUCCESS, payload:data});\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n            dispatch({type:CREATE_ORDER_FAILURE, payload:error});\r\n        }\r\n    };\r\n};\r\n    \r\n\r\nexport const getUsersOrders = (jwt) => {\r\n    return async (dispatch) => {\r\n        dispatch({type: GET_USERS_ORDERS_REQUEST});\r\n        try {\r\n            const {data} = await api.get(`/api/order/user`, {\r\n                headers:{\r\n                    Authorization: `Bearer ${jwt}`,\r\n                },\r\n            });\r\n            console.log(\"users order\", data);\r\n            dispatch({type: GET_USERS_ORDERS_SUCCESS, payload:data});\r\n        } catch (error) {\r\n            dispatch({type: GET_USERS_ORDERS_FAILURE, payload:error});\r\n        }\r\n    }\r\n}\r\n\r\nexport const getOrders = (jwt, page = 0, size = 10) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: GET_ORDERS_REQUEST });\r\n        try {\r\n            const { data } = await api.get('/api/admin/orders', {\r\n                headers: {\r\n                    Authorization: `Bearer ${jwt}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                params: {\r\n                    page,\r\n                    size,\r\n                },\r\n            });\r\n            console.log('Orders data:', data);\r\n            dispatch({ type: GET_ORDERS_SUCCESS, payload: data });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GET_ORDERS_FAILURE,\r\n                payload: error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n            });\r\n        }\r\n    };\r\n};"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,oBAAoB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,wBAAwB,EAAEC,wBAAwB,EAAEC,wBAAwB,QAAQ,eAAe;AAE1O,OAAO,MAAMC,WAAW,GAAIC,OAAO,IAAK;EACpC,OAAO,MAAOC,QAAQ,IAAK;IACvBA,QAAQ,CAAC;MAACC,IAAI,EAAEX;IAAoB,CAAC,CAAC;IACtC,IAAI;MACA,MAAM;QAACY;MAAI,CAAC,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,YAAY,EAAEJ,OAAO,CAACK,KAAK,EAAC;QACtDC,OAAO,EAAC;UACJC,aAAa,EAAE,UAAUP,OAAO,CAACQ,GAAG;QACxC;MACJ,CAAC,CAAC;MACF;MACA,IAAIL,IAAI,CAACM,SAAS,EAAE;QAChBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGT,IAAI,CAACM,SAAS;MACzC,CAAC,MAAM,IAAIN,IAAI,CAACU,WAAW,EAAE;QACzBH,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGT,IAAI,CAACU,WAAW;MAC3C,CAAC,MAAM,IAAIV,IAAI,CAACW,UAAU,EAAE;QACxBJ,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGT,IAAI,CAACW,UAAU;MAC1C,CAAC,MAAM,IAAIX,IAAI,CAACY,WAAW,EAAE;QACzBL,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGT,IAAI,CAACY,WAAW;MAC3C,CAAC,MAAM,IAAIZ,IAAI,CAACa,QAAQ,EAAE;QACtBN,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGT,IAAI,CAACa,QAAQ;MACxC,CAAC,MAAM,IAAIb,IAAI,CAACc,UAAU,EAAE;QAAG;QAC3BP,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGT,IAAI,CAACc,UAAU;MAC1C,CAAC,MAAM;QACHC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEhB,IAAI,CAAC;MAC7D;MACAe,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEhB,IAAI,CAAC;MACvCF,QAAQ,CAAC;QAACC,IAAI,EAACV,oBAAoB;QAAE4B,OAAO,EAACjB;MAAI,CAAC,CAAC;IACvD,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACZH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC;MAC3BpB,QAAQ,CAAC;QAACC,IAAI,EAACZ,oBAAoB;QAAE8B,OAAO,EAACC;MAAK,CAAC,CAAC;IACxD;EACJ,CAAC;AACL,CAAC;AAGD,OAAO,MAAMC,cAAc,GAAId,GAAG,IAAK;EACnC,OAAO,MAAOP,QAAQ,IAAK;IACvBA,QAAQ,CAAC;MAACC,IAAI,EAAEL;IAAwB,CAAC,CAAC;IAC1C,IAAI;MACA,MAAM;QAACM;MAAI,CAAC,GAAG,MAAMd,GAAG,CAACkC,GAAG,CAAC,iBAAiB,EAAE;QAC5CjB,OAAO,EAAC;UACJC,aAAa,EAAE,UAAUC,GAAG;QAChC;MACJ,CAAC,CAAC;MACFU,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEhB,IAAI,CAAC;MAChCF,QAAQ,CAAC;QAACC,IAAI,EAAEJ,wBAAwB;QAAEsB,OAAO,EAACjB;MAAI,CAAC,CAAC;IAC5D,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACZpB,QAAQ,CAAC;QAACC,IAAI,EAAEN,wBAAwB;QAAEwB,OAAO,EAACC;MAAK,CAAC,CAAC;IAC7D;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMG,SAAS,GAAGA,CAAChB,GAAG,EAAEiB,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,KAAK;EACnD,OAAO,MAAOzB,QAAQ,IAAK;IACvBA,QAAQ,CAAC;MAAEC,IAAI,EAAER;IAAmB,CAAC,CAAC;IACtC,IAAI;MACA,MAAM;QAAES;MAAK,CAAC,GAAG,MAAMd,GAAG,CAACkC,GAAG,CAAC,mBAAmB,EAAE;QAChDjB,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUC,GAAG,EAAE;UAC9B,cAAc,EAAE;QACpB,CAAC;QACDmB,MAAM,EAAE;UACJF,IAAI;UACJC;QACJ;MACJ,CAAC,CAAC;MACFR,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEhB,IAAI,CAAC;MACjCF,QAAQ,CAAC;QAAEC,IAAI,EAAEP,kBAAkB;QAAEyB,OAAO,EAAEjB;MAAK,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACZpB,QAAQ,CAAC;QACLC,IAAI,EAAET,kBAAkB;QACxB2B,OAAO,EAAEC,KAAK,CAACO,QAAQ,IAAIP,KAAK,CAACO,QAAQ,CAACzB,IAAI,CAAC0B,OAAO,GAChDR,KAAK,CAACO,QAAQ,CAACzB,IAAI,CAAC0B,OAAO,GAC3BR,KAAK,CAACQ;MAChB,CAAC,CAAC;IACN;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}