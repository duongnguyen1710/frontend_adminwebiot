{"ast":null,"code":"import { api } from \"../../config/api\";\nimport { ADD_ITEM_TO_CART_FAILURE, ADD_ITEM_TO_CART_REQUEST, ADD_ITEM_TO_CART_SUCCESS, CLEAR_CART_FAILURE, CLEAR_CART_REQUEST, CLEAR_CART_SUCCESS, FIND_CART_FAILURE, FIND_CART_REQUEST, FIND_CART_SUCCESS, GET_ALL_CART_ITEMS_FAILURE, GET_ALL_CART_ITEMS_REQUEST, GET_ALL_CART_ITEMS_SUCCESS, REMOVE_CARTITEM_FAILURE, REMOVE_CARTITEM_REQUEST, REMOVE_CARTITEM_SUCCESS, UPDATE_CARTITEM_FAILURE, UPDATE_CARTITEM_REQUEST, UPDATE_CARTITEM_SUCCESS } from \"./ActionTypes\";\nexport const findCart = token => {\n  return async dispatch => {\n    dispatch({\n      type: FIND_CART_REQUEST\n    });\n    try {\n      const response = await api.get(`/api/cart`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"tìm thấy cart\", response.data);\n      dispatch({\n        type: FIND_CART_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(\"error cart\", error);\n      dispatch({\n        type: FIND_CART_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const getAllCartItems = reqData => {\n  return async dispatch => {\n    dispatch({\n      type: GET_ALL_CART_ITEMS_REQUEST\n    });\n    try {\n      const response = await api.get(`/api/carts/${reqData.cartId}/items`, {\n        headers: {\n          Authorization: `Bearer ${reqData.token}`\n        }\n      });\n      dispatch({\n        type: GET_ALL_CART_ITEMS_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ALL_CART_ITEMS_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const addItemToCart = reqData => {\n  return async dispatch => {\n    dispatch({\n      type: ADD_ITEM_TO_CART_REQUEST\n    });\n    try {\n      const {\n        data\n      } = await api.put(`/api/cart/add`, reqData.cartItem, {\n        headers: {\n          Authorization: `Bearer ${reqData.token}`\n        }\n      });\n      console.log(\"add item to cart\", data);\n      dispatch({\n        type: ADD_ITEM_TO_CART_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      console.log(\"catch error\", error);\n      dispatch({\n        type: ADD_ITEM_TO_CART_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const updateCartItem = reqData => {\n  return async dispatch => {\n    dispatch({\n      type: UPDATE_CARTITEM_REQUEST\n    });\n    try {\n      const {\n        data\n      } = await api.put(`/api/cart-item/update`, reqData.data, {\n        headers: {\n          Authorization: `Bearer ${reqData.jwt}`\n        }\n      });\n      console.log(\"update cartItem\", data);\n      dispatch({\n        type: UPDATE_CARTITEM_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      console.log(\"catch error\", error);\n      dispatch({\n        type: UPDATE_CARTITEM_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const removeCartItem = ({\n  cartItemId,\n  jwt\n}) => {\n  return async dispatch => {\n    dispatch({\n      type: REMOVE_CARTITEM_REQUEST\n    });\n    try {\n      const {\n        data\n      } = await api.delete(`/api/cart-item/${cartItemId}/remove`, {\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      console.log(\"remove cartItem\", data);\n      dispatch({\n        type: REMOVE_CARTITEM_SUCCESS,\n        payload: cartItemId\n      });\n    } catch (error) {\n      console.log(\"catch error\", error);\n      dispatch({\n        type: REMOVE_CARTITEM_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const cleatCartAction = () => {\n  return async dispatch => {\n    dispatch({\n      type: CLEAR_CART_REQUEST\n    });\n    try {\n      const {\n        data\n      } = await api.put(`/api/cart/clear`, {}, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n        }\n      });\n      dispatch({\n        type: CLEAR_CART_SUCCESS,\n        payload: data\n      });\n      console.log(\"clear cart\", data);\n    } catch (error) {\n      console.log(\"catch error\", error);\n      dispatch({\n        type: CLEAR_CART_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["api","ADD_ITEM_TO_CART_FAILURE","ADD_ITEM_TO_CART_REQUEST","ADD_ITEM_TO_CART_SUCCESS","CLEAR_CART_FAILURE","CLEAR_CART_REQUEST","CLEAR_CART_SUCCESS","FIND_CART_FAILURE","FIND_CART_REQUEST","FIND_CART_SUCCESS","GET_ALL_CART_ITEMS_FAILURE","GET_ALL_CART_ITEMS_REQUEST","GET_ALL_CART_ITEMS_SUCCESS","REMOVE_CARTITEM_FAILURE","REMOVE_CARTITEM_REQUEST","REMOVE_CARTITEM_SUCCESS","UPDATE_CARTITEM_FAILURE","UPDATE_CARTITEM_REQUEST","UPDATE_CARTITEM_SUCCESS","findCart","token","dispatch","type","response","get","headers","Authorization","console","log","data","payload","error","getAllCartItems","reqData","cartId","addItemToCart","put","cartItem","message","updateCartItem","jwt","removeCartItem","cartItemId","delete","cleatCartAction","localStorage","getItem"],"sources":["C:/Users/DUONG/Downloads/Project-react-main/Project-react-main/src/componet/State/Cart/Action.js"],"sourcesContent":["import { api } from \"../../config/api\";\r\nimport { ADD_ITEM_TO_CART_FAILURE, ADD_ITEM_TO_CART_REQUEST, ADD_ITEM_TO_CART_SUCCESS, CLEAR_CART_FAILURE, CLEAR_CART_REQUEST, CLEAR_CART_SUCCESS, FIND_CART_FAILURE, FIND_CART_REQUEST, FIND_CART_SUCCESS, GET_ALL_CART_ITEMS_FAILURE, GET_ALL_CART_ITEMS_REQUEST, GET_ALL_CART_ITEMS_SUCCESS, REMOVE_CARTITEM_FAILURE, REMOVE_CARTITEM_REQUEST, REMOVE_CARTITEM_SUCCESS, UPDATE_CARTITEM_FAILURE, UPDATE_CARTITEM_REQUEST, UPDATE_CARTITEM_SUCCESS } from \"./ActionTypes\";\r\n\r\nexport const findCart = (token) => {\r\n    return async (dispatch) => {\r\n        dispatch({type: FIND_CART_REQUEST});\r\n        try {\r\n            const response = await api.get(`/api/cart`, {\r\n                headers:{\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            console.log(\"tìm thấy cart\", response.data)\r\n            dispatch({type: FIND_CART_SUCCESS, payload: response.data});\r\n        } catch (error) {\r\n            console.log(\"error cart\", error)\r\n            dispatch({type: FIND_CART_FAILURE, payload: error});\r\n        }\r\n    };\r\n};\r\n\r\nexport const getAllCartItems = (reqData) => {\r\n    return async (dispatch) => {\r\n        dispatch({type: GET_ALL_CART_ITEMS_REQUEST});\r\n        try {\r\n            const response = await api.get(`/api/carts/${reqData.cartId}/items`,{\r\n                headers: {\r\n                    Authorization: `Bearer ${reqData.token}`,\r\n                },\r\n            });\r\n            dispatch({type: GET_ALL_CART_ITEMS_SUCCESS, payload:response.data});\r\n        } catch (error) {\r\n            dispatch({type: GET_ALL_CART_ITEMS_FAILURE, payload:error});\r\n        }\r\n    };\r\n};\r\n\r\nexport const addItemToCart = (reqData) => {\r\n    return async (dispatch) => {\r\n        dispatch({type:ADD_ITEM_TO_CART_REQUEST});\r\n        try {\r\n            const {data} = await api.put(`/api/cart/add`,reqData.cartItem,{\r\n                headers:{\r\n                    Authorization: `Bearer ${reqData.token}`,\r\n                },\r\n            });\r\n            console.log(\"add item to cart\", data)\r\n            dispatch({type: ADD_ITEM_TO_CART_SUCCESS, payload:data});\r\n        } catch (error) {\r\n            console.log(\"catch error\", error)\r\n            dispatch({type:ADD_ITEM_TO_CART_FAILURE, payload:error.message});\r\n        }\r\n    };\r\n};\r\n\r\nexport const updateCartItem = (reqData) => {\r\n    return async (dispatch) => {\r\n        dispatch({type: UPDATE_CARTITEM_REQUEST});\r\n        try {\r\n            const{data} = await api.put(`/api/cart-item/update`, reqData.data, {\r\n                headers:{\r\n                    Authorization:`Bearer ${reqData.jwt}`,\r\n                },\r\n            });\r\n            console.log(\"update cartItem\", data)\r\n            dispatch({type: UPDATE_CARTITEM_SUCCESS, payload:data});\r\n        } catch (error) {\r\n            console.log(\"catch error\", error)\r\n            dispatch({type:UPDATE_CARTITEM_FAILURE, payload:error.message});\r\n        }\r\n    };\r\n};\r\n\r\nexport const removeCartItem = ({cartItemId, jwt}) => {\r\n    return async (dispatch) => {\r\n        dispatch({type:REMOVE_CARTITEM_REQUEST});\r\n        try {\r\n            const {data} = await api.delete(`/api/cart-item/${cartItemId}/remove`, {\r\n                headers:{\r\n                    Authorization:`Bearer ${jwt}`,\r\n                },\r\n            });\r\n            console.log(\"remove cartItem\", data)\r\n            dispatch({type:REMOVE_CARTITEM_SUCCESS, payload:cartItemId});\r\n        } catch (error) {\r\n            console.log(\"catch error\", error)\r\n            dispatch({type:REMOVE_CARTITEM_FAILURE, payload:error.message});\r\n        }\r\n    };\r\n};\r\n\r\nexport const cleatCartAction = () => {\r\n    return async (dispatch) => {\r\n        dispatch({type: CLEAR_CART_REQUEST});\r\n        try {\r\n            const {data} = await api.put(`/api/cart/clear`,{},{\r\n                headers:{\r\n                    Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n                },\r\n            });\r\n            dispatch({type:CLEAR_CART_SUCCESS, payload:data})\r\n            console.log(\"clear cart\", data);\r\n        } catch (error) {\r\n            console.log(\"catch error\", error)\r\n            dispatch({type:CLEAR_CART_FAILURE, payload:error.message});\r\n        }\r\n    };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}