{"ast":null,"code":"// import {\n//   Box,\n//   Button,\n//   Card,\n//   CardActions,\n//   CardHeader,\n//   IconButton,\n//   Modal,\n//   Paper,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n// } from \"@mui/material\";\n// import React, { useEffect } from \"react\";\n// import CreateIcon from \"@mui/icons-material/Create\";\n// import { Delete } from \"@mui/icons-material\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { getCategoryItemOfRestaurant } from \"../../componet/State/CategoryTest/Action\";\n// import CreateCategoryChildren from \"./CreateCategoryChildren\";\n// const orders = [1, 1, 1, 1, 1, 1, 1];\n// const style = {\n//   position: \"absolute\",\n//   top: \"50%\",\n//   left: \"50%\",\n//   transform: \"translate(-50%, -50%)\",\n//   width: 400,\n//   bgcolor: \"background.paper\",\n//   border: \"2px solid #000\",\n//   boxShadow: 24,\n//   p: 4,\n// };\n// export default function CategoryChildrenTable() {\n//   const dispatch = useDispatch();\n//   const jwt = localStorage.getItem(\"jwt\");\n//   const { restaurant, category } = useSelector((store) => store);\n//   const [open, setOpen] = React.useState(false);\n//   const handleOpen = () => setOpen(true);\n//   const handleClose = () => setOpen(false);\n\n//   //   const handleUpdateStoke = (id) =>{\n//   //     dispatch(updateStockOfIngredient({id, jwt}));\n//   //   }\n//   useEffect(() => {\n//     dispatch(\n//       getCategoryItemOfRestaurant({ jwt, id: restaurant.usersRestaurant.id })\n//     );\n//   }, []);\n//   return (\n//     <div>\n//       <Box>\n//         <Card className=\"mt-1\">\n//           <CardHeader\n//             action={\n//               <IconButton onClick={handleOpen} aria-label=\"settings\">\n//                 <CreateIcon />\n//               </IconButton>\n//             }\n//             title={\"Danh mục con\"}\n//             sx={{ pt: 2, alignItems: \"center\" }}\n//           />\n\n//           <TableContainer component={Paper}>\n//             <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n//               <TableHead>\n//                 <TableRow>\n//                   <TableCell align=\"left\">ID</TableCell>\n//                   <TableCell align=\"right\">Tên</TableCell>\n//                   <TableCell align=\"right\">Danh mục thành phần</TableCell>\n//                   <TableCell align=\"right\">Trạng thái</TableCell>\n//                 </TableRow>\n//               </TableHead>\n//               <TableBody>\n//                 {category.categoryItems.map((item) => (\n//                   <TableRow\n//                     key={item.name}\n//                     sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n//                   >\n//                     <TableCell component=\"th\" scope=\"row\">\n//                       {item.id}\n//                     </TableCell>\n//                     <TableCell align=\"right\">{item.name}</TableCell>\n\n//                     <TableCell align=\"right\">{item.category.name}</TableCell>\n//                     <TableCell align=\"right\">\n//                       {/* <Button onClick={()=>handleUpdateStoke(item.id)}>{item.inStoke?\"còn hàng\":\"hết hàng\"}</Button> */}\n//                     </TableCell>\n//                   </TableRow>\n//                 ))}\n//               </TableBody>\n//             </Table>\n//           </TableContainer>\n//         </Card>\n//         <Modal\n//           open={open}\n//           onClose={handleClose}\n//           aria-labelledby=\"modal-modal-title\"\n//           aria-describedby=\"modal-modal-description\"\n//         >\n//           <Box sx={style}>\n//             <CreateCategoryChildren />\n//           </Box>\n//         </Modal>\n//       </Box>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/DUONG/Desktop/Study/React/frontend_webiot/frontend_iot/src/AdminComponent/CategoryTest/CategoryChildrenTable.jsx"],"sourcesContent":["// import {\r\n//   Box,\r\n//   Button,\r\n//   Card,\r\n//   CardActions,\r\n//   CardHeader,\r\n//   IconButton,\r\n//   Modal,\r\n//   Paper,\r\n//   Table,\r\n//   TableBody,\r\n//   TableCell,\r\n//   TableContainer,\r\n//   TableHead,\r\n//   TableRow,\r\n// } from \"@mui/material\";\r\n// import React, { useEffect } from \"react\";\r\n// import CreateIcon from \"@mui/icons-material/Create\";\r\n// import { Delete } from \"@mui/icons-material\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { getCategoryItemOfRestaurant } from \"../../componet/State/CategoryTest/Action\";\r\n// import CreateCategoryChildren from \"./CreateCategoryChildren\";\r\n// const orders = [1, 1, 1, 1, 1, 1, 1];\r\n// const style = {\r\n//   position: \"absolute\",\r\n//   top: \"50%\",\r\n//   left: \"50%\",\r\n//   transform: \"translate(-50%, -50%)\",\r\n//   width: 400,\r\n//   bgcolor: \"background.paper\",\r\n//   border: \"2px solid #000\",\r\n//   boxShadow: 24,\r\n//   p: 4,\r\n// };\r\n// export default function CategoryChildrenTable() {\r\n//   const dispatch = useDispatch();\r\n//   const jwt = localStorage.getItem(\"jwt\");\r\n//   const { restaurant, category } = useSelector((store) => store);\r\n//   const [open, setOpen] = React.useState(false);\r\n//   const handleOpen = () => setOpen(true);\r\n//   const handleClose = () => setOpen(false);\r\n\r\n//   //   const handleUpdateStoke = (id) =>{\r\n//   //     dispatch(updateStockOfIngredient({id, jwt}));\r\n//   //   }\r\n//   useEffect(() => {\r\n//     dispatch(\r\n//       getCategoryItemOfRestaurant({ jwt, id: restaurant.usersRestaurant.id })\r\n//     );\r\n//   }, []);\r\n//   return (\r\n//     <div>\r\n//       <Box>\r\n//         <Card className=\"mt-1\">\r\n//           <CardHeader\r\n//             action={\r\n//               <IconButton onClick={handleOpen} aria-label=\"settings\">\r\n//                 <CreateIcon />\r\n//               </IconButton>\r\n//             }\r\n//             title={\"Danh mục con\"}\r\n//             sx={{ pt: 2, alignItems: \"center\" }}\r\n//           />\r\n\r\n//           <TableContainer component={Paper}>\r\n//             <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n//               <TableHead>\r\n//                 <TableRow>\r\n//                   <TableCell align=\"left\">ID</TableCell>\r\n//                   <TableCell align=\"right\">Tên</TableCell>\r\n//                   <TableCell align=\"right\">Danh mục thành phần</TableCell>\r\n//                   <TableCell align=\"right\">Trạng thái</TableCell>\r\n//                 </TableRow>\r\n//               </TableHead>\r\n//               <TableBody>\r\n//                 {category.categoryItems.map((item) => (\r\n//                   <TableRow\r\n//                     key={item.name}\r\n//                     sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n//                   >\r\n//                     <TableCell component=\"th\" scope=\"row\">\r\n//                       {item.id}\r\n//                     </TableCell>\r\n//                     <TableCell align=\"right\">{item.name}</TableCell>\r\n\r\n//                     <TableCell align=\"right\">{item.category.name}</TableCell>\r\n//                     <TableCell align=\"right\">\r\n//                       {/* <Button onClick={()=>handleUpdateStoke(item.id)}>{item.inStoke?\"còn hàng\":\"hết hàng\"}</Button> */}\r\n//                     </TableCell>\r\n//                   </TableRow>\r\n//                 ))}\r\n//               </TableBody>\r\n//             </Table>\r\n//           </TableContainer>\r\n//         </Card>\r\n//         <Modal\r\n//           open={open}\r\n//           onClose={handleClose}\r\n//           aria-labelledby=\"modal-modal-title\"\r\n//           aria-describedby=\"modal-modal-description\"\r\n//         >\r\n//           <Box sx={style}>\r\n//             <CreateCategoryChildren />\r\n//           </Box>\r\n//         </Modal>\r\n//       </Box>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}